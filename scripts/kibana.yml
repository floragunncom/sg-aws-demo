# Kibana is served by a back end server. This controls which port to use.
# server.port: 5601

searchguard.multitenancy.enabled: true
elasticsearch.requestHeadersWhitelist: ["sgtenant","authorization"]

# The host to bind the server to.
server.host: "RPLC_HOST"

# If you are running kibana behind a proxy, and want to mount it at a path,
# specify that path here. The basePath can't end in a slash.
# server.basePath: ""

# The maximum payload size in bytes on incoming server requests.
# server.maxPayloadBytes: 1048576

# The Elasticsearch instance to use for all your queries.
elasticsearch.url: "https://RPLC_HOST:9200"
searchguard.cookie.secure: true
searchguard.cookie.password: "ggdfha1234567890123456789123456789lkokmnt"
searchguard.basicauth.forbidden_usernames: ["kibanaserver", "logstash"]

# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,
# then the host you use to connect to *this* Kibana instance will be sent.
# elasticsearch.preserveHost: true

# Kibana uses an index in Elasticsearch to store saved searches, visualizations
# and dashboards. It will create a new index if it doesn't already exist.
# kibana.index: ".kibana"

# The default application to load.
# kibana.defaultAppId: "discover"

# If your Elasticsearch is protected with basic auth, these are the user credentials
# used by the Kibana server to perform maintenance on the kibana_index at startup. Your Kibana
# users will still need to authenticate with Elasticsearch (which is proxied through
# the Kibana server)
elasticsearch.username: "kibanaserver"
elasticsearch.password: "kibanaserver"

xpack.security.enabled: false
xpack.graph.enabled: true
xpack.ml.enabled: true
xpack.reporting.enabled: true
xpack.monitoring.enabled: true

# SSL for outgoing requests from the Kibana Server to the browser (PEM formatted)
server.ssl.enabled: true
server.ssl.certificate: /etc/kibana/esnode.pem
server.ssl.key: /etc/kibana/esnode-key.pem

# Optional setting to validate that your Elasticsearch backend uses the same key files (PEM formatted)
#elasticsearch.ssl.certificate: /etc/elasticsearch/kibana.crt.pem
#elasticsearch.ssl.key: /etc/elasticsearch/kibana.key

# If you need to provide a CA certificate for your Elasticsearch instance, put
# the path of the pem file here.
elasticsearch.ssl.certificateAuthorities: ["/etc/kibana/root-ca.pem"]

# Set to false to have a complete disregard for the validity of the SSL
# certificate.
elasticsearch.ssl.verificationMode: certificate

# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to
# request_timeout setting
# elasticsearch.pingTimeout: 1500

# Time in milliseconds to wait for responses from the back end or elasticsearch.
# This must be > 0
# elasticsearch.requestTimeout: 30000

# Header names and values that are sent to Elasticsearch. Any custom headers cannot be overwritten
# by client-side headers.

#JWT token generated via https://jwt.io
#{
#  "alg": "HS256",
#  "typ": "JWT"
#}
#{
#  "iss": "jwtrole1,jwtrole_2",
#  "sub": "kibanaserver"
#}
#key: 167654_signkey
#elasticsearch.customHeaders: {jwttoken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJqd3Ryb2xlMSxqd3Ryb2xlXzIiLCJzdWIiOiJraWJhbmFzZXJ2ZXIifQ.Zy1Y6AohSxSF7TDGivOmoW821PDuRJeNND2RPQXbmIA}

# Time in milliseconds for Elasticsearch to wait for responses from shards.
# Set to 0 to disable.
# elasticsearch.shardTimeout: 0

# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying
# elasticsearch.startupTimeout: 5000

# Set the path to where you would like the process id file to be created.
# pid.file: /var/run/kibana.pid

# If you would like to send the log output to a file you can set the path below.
logging.dest: stdout

# Set this to true to suppress all logging output.
# logging.silent: false

# Set this to true to suppress all logging output except for error messages.
logging.quiet: true

# Set this to true to log all events, including system usage information and all requests.
# logging.verbose: false

# make sense/dev tools work 
# https://github.com/elastic/kibana/issues/7128
#console.proxyConfig:
# - match:
#    host: "*"
#    port: "{9200..9202}"#
#
#   ssl:
#   ca: "/etc/elasticsearch/root-ca.pem"
